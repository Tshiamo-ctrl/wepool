# Generated by Django 4.2.7 on 2025-08-01 16:54

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Profile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("phone", models.CharField(max_length=15, unique=True)),
                (
                    "referrer_phone",
                    models.CharField(blank=True, max_length=15, null=True),
                ),
                (
                    "member_type",
                    models.CharField(
                        choices=[
                            ("paying", "Paying Member"),
                            ("sponsored", "PIF Member"),
                        ],
                        max_length=10,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("yellow", "Yellow"),
                            ("green", "Green"),
                            ("qualified", "Qualified"),
                        ],
                        default="pending",
                        max_length=10,
                    ),
                ),
                ("date_of_birth", models.DateField(blank=True, null=True)),
                ("city", models.CharField(blank=True, max_length=100)),
                ("state", models.CharField(blank=True, max_length=100)),
                ("country", models.CharField(blank=True, max_length=100)),
                ("zip_code", models.CharField(blank=True, max_length=10)),
                ("verified_email", models.BooleanField(default=False)),
                (
                    "email_verification_token",
                    models.UUIDField(default=uuid.uuid4, editable=False),
                ),
                ("registered_tacconnector", models.BooleanField(default=False)),
                ("tacconnector_link", models.URLField(blank=True, null=True)),
                ("paid_for_self", models.BooleanField(default=False)),
                ("paid_for_sponsored", models.BooleanField(default=False)),
                ("agreed_to_terms", models.BooleanField(default=False)),
                ("communications_opt_in", models.BooleanField(default=False)),
                ("terms_agreed_date", models.DateTimeField(blank=True, null=True)),
                (
                    "qualification_overridden",
                    models.BooleanField(
                        default=False,
                        help_text="Override normal qualification requirements",
                    ),
                ),
                (
                    "override_reason",
                    models.TextField(
                        blank=True, help_text="Reason for overriding qualifications"
                    ),
                ),
                (
                    "override_date",
                    models.DateTimeField(
                        blank=True,
                        help_text="When the qualification was overridden",
                        null=True,
                    ),
                ),
                (
                    "admin_promotion_overridden",
                    models.BooleanField(
                        default=False, help_text="Override admin promotion requirements"
                    ),
                ),
                (
                    "admin_override_reason",
                    models.TextField(
                        blank=True, help_text="Reason for admin promotion override"
                    ),
                ),
                (
                    "admin_override_date",
                    models.DateTimeField(
                        blank=True,
                        help_text="When admin promotion was overridden",
                        null=True,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "admin_overridden_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="Superuser who overrode admin promotion",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="admin_promotion_overrides",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "overridden_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="Admin who overrode the qualification",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="qualification_overrides",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Profile",
                "verbose_name_plural": "Profiles",
                "ordering": ["-created_at"],
            },
        ),
    ]
